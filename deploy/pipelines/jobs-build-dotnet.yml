parameters:
  - name: buildProjects
    type: string
    default: "**/*.sln"
  - name: testProjects
    type: string
    default: "**/*.Tests/*.Tests.csproj"
  - name: publishProjects
    type: string
    default: "**/*.Server.csproj"
  - name: publishProjectsMigrations
    type: string
    default: "**/*.Migrations.csproj"
  - name: buildConfiguration
    type: string
    default: "Release"
  - name: artifactName
    type: string
    default: "Server"

jobs:
  - job: BuildDotNet
    displayName: Build Test.Template.React.App Server
    steps:
      - task: UseDotNet@2
        displayName: Get DotNet SDK
        inputs:
          packageType: sdk
          useGlobalJson: true
      - task: DotNetCoreCLI@2
        displayName: Build Test.Template.React.App App
        inputs:
          command: build
          projects: ${{parameters.buildProjects}}
          arguments: "--configuration ${{parameters.buildConfiguration}}"
      - task: DotNetCoreCLI@2
        displayName: Test Test.Template.React.App App
        inputs:
          command: test
          projects: ${{parameters.testProjects}}
          arguments: '--configuration ${{parameters.buildConfiguration}} --collect "Code coverage"'
      - task: DotNetCoreCLI@2
        displayName: Publish Test.Template.React.App App
        inputs:
          command: publish
          projects: ${{parameters.publishProjects}}
          publishWebProjects: false
          arguments: "--configuration ${{parameters.buildConfiguration}} --output $(Build.ArtifactStagingDirectory)/publish"
          zipAfterPublish: true
      - publish: $(Build.ArtifactStagingDirectory)/publish
        displayName: Artifacts - Publish ${{ parameters.artifactName }}
        artifact: ${{ parameters.artifactName }}
      - task: DotNetCoreCLI@2
        displayName: Publish Test.Template.React.App Migrations
        inputs:
          command: publish
          projects: ${{parameters.publishProjectsMigrations}}
          publishWebProjects: false
          arguments: "--configuration ${{parameters.buildConfiguration}} --output $(Build.ArtifactStagingDirectory)/migrations"
          zipAfterPublish: true
      - publish: $(Build.ArtifactStagingDirectory)/migrations
        displayName: Artifacts - Publish ${{ parameters.artifactName }}-Migrations
        artifact: ${{ parameters.artifactName }}-Migrations
