parameters:
  - name: dotNetBuildProjects
    type: string
    default: "**/*.sln"
  - name: dotNetTestProjects
    type: string
    default: "**/*.Tests/*.Tests.csproj"
  - name: buildConfiguration
    type: string
    default: "Release"
  - name: "clientPath"
    type: string
    default: "src/Client"

jobs:
  - job: Build
    displayName: Quality Build Test.Template.React.App
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self
        fetchDepth: 0 # disable shallow fetch (https://learn.microsoft.com/en-us/azure/devops/pipelines/yaml-schema/steps-checkout?view=azure-pipelines#shallow-fetch)
      - task: UseDotNet@2
        displayName: Get DotNet SDK
        inputs:
          packageType: sdk
          useGlobalJson: true
      # - task: SonarCloudPrepare@1
      #   displayName: "Prepare analysis configuration"
      #   inputs:
      #     SonarCloud: "shared-sonarcloud-service-connection-AZ_DEVOPS_PROJECT_NAME"
      #     organization: isolutionsag
      #     projectKey: Test.Template.React.App
      #     extraProperties: |
      #       scm.provider=git
      #       sonar.typescript.tsconfigPaths=src/Client/tsconfig.json
      #       sonar.projectBaseDir=/home/vsts/work/1/s/
      #       sonar.exclusions=**/bin/**,**/obj/**,**/*.dll,**/.yarn/**,**/node_modules/**,**/.pnp*
      - task: DotNetCoreCLI@2
        displayName: Build Test.Template.React.App App
        inputs:
          command: build
          projects: ${{parameters.dotNetBuildProjects}}
          arguments: "--configuration ${{parameters.buildConfiguration}}"
      - task: DotNetCoreCLI@2
        displayName: Test Test.Template.React.App App
        inputs:
          command: test
          projects: ${{parameters.dotNetTestProjects}}
          arguments: '--configuration ${{parameters.buildConfiguration}} --collect "Code coverage"'
      - task: NodeTool@0
        inputs:
          versionSpec: "18.17.x"
      - task: Bash@3
        displayName: Yarn - Install
        inputs:
          targetType: inline
          workingDirectory: ${{parameters.clientPath}}
          script: |
            yarn set version 3.6.1
      - task: Bash@3
        displayName: Yarn - Install NPM packages
        inputs:
          targetType: inline
          workingDirectory: ${{parameters.clientPath}}
          script: |
            yarn install --immutable
      - task: Bash@3
        displayName: Yarn - Run jest
        inputs:
          targetType: inline
          workingDirectory: ${{parameters.clientPath}}
          script: |
            yarn test-ci
      # - task: SonarCloudAnalyze@1
      #   displayName: SonarCloud - Run code analysis
      # - task: SonarCloudPublish@1
      #   displayName: SonarCloud - Publish quality gate result
