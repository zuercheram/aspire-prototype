// <auto-generated />
using System;
using Aspire.Prototype.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aspire.Prototype.Domain.Migrations.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrinkId"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByOid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GlassId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Instructions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tags")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ThumbUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedByOid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DrinkId");

                    b.HasIndex("GlassId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.DrinkIngredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<string>("Measure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Step")
                        .HasColumnType("smallint");

                    b.HasKey("IngredientId", "DrinkId");

                    b.HasIndex("DrinkId");

                    b.ToTable("DrinkIngredients");
                });

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.Glass", b =>
                {
                    b.Property<int>("GlassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlassId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByOid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Updated")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedByOid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GlassId");

                    b.ToTable("Glass");
                });

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByOid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Updated")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedByOid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.Drink", b =>
                {
                    b.HasOne("Aspire.Prototype.Domain.Entities.Glass", "Glass")
                        .WithMany("Drinks")
                        .HasForeignKey("GlassId");

                    b.Navigation("Glass");
                });

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.DrinkIngredient", b =>
                {
                    b.HasOne("Aspire.Prototype.Domain.Entities.Drink", "Drink")
                        .WithMany("DrinkIngredients")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aspire.Prototype.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("DrinkIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.Drink", b =>
                {
                    b.Navigation("DrinkIngredients");
                });

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.Glass", b =>
                {
                    b.Navigation("Drinks");
                });

            modelBuilder.Entity("Aspire.Prototype.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("DrinkIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
